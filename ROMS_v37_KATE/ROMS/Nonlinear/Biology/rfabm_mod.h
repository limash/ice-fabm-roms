
! ROMS input file generated by fabm_roms_input_from_yaml.py
!
! Phil Wallhead, NIVA (2015)
!
      USE mod_param
!
      implicit none


!
!  Set biological tracer identification indices.
!
      integer, allocatable :: idbio(:)  ! Biological tracers
      integer :: iN1_p                  ! phosphate/phosphorus(mmol P/m^3)
      integer :: iN3_n                  ! nitrate/nitrogen(mmol N/m^3)
      integer :: iN4_n                  ! ammonium/nitrogen(mmol N/m^3)
      integer :: iN5_s                  ! silicate/silicate(mmol Si/m^3)
      integer :: iO2_o                  ! oxygen/oxygen(mmol O_2/m^3)
      integer :: iO3_c                  ! carbonate/total dissolved inorganic carbon(mmol C/m^3)
      integer :: iO3_TA                  ! carbonate/total alkalinity(umol/kg)
      integer :: iR1_c                  ! labile dissolved organic matter/carbon(mg C/m^3)
      integer :: iR1_n                  ! labile dissolved organic matter/nitrogen(mmol N/m^3)
      integer :: iR1_p                  ! labile dissolved organic matter/phosphorus(mmol P/m^3)
      integer :: iR2_c                  ! semi-labile dissolved organic matter/carbon(mg C/m^3)
      integer :: iR3_c                  ! semi-refractory dissolved organic matter/carbon(mg C/m^3)
      integer :: iR4_c                  ! small-size pom/carbon(mg C/m^3)
      integer :: iR4_n                  ! small-size pom/nitrogen(mmol N/m^3)
      integer :: iR4_p                  ! small-size pom/phosphorus(mmol P/m^3)
      integer :: iR6_c                  ! medium-size pom/carbon(mg C/m^3)
      integer :: iR6_n                  ! medium-size pom/nitrogen(mmol N/m^3)
      integer :: iR6_p                  ! medium-size pom/phosphorus(mmol P/m^3)
      integer :: iR6_s                  ! medium-size pom/silicate(mmol Si/m^3)
      integer :: iR8_c                  ! large-size pom/carbon(mg C/m^3)
      integer :: iR8_n                  ! large-size pom/nitrogen(mmol N/m^3)
      integer :: iR8_p                  ! large-size pom/phosphorus(mmol P/m^3)
      integer :: iR8_s                  ! large-size pom/silicate(mmol Si/m^3)
      integer :: iB1_c                  ! bacteria/carbon(mg C/m^3)
      integer :: iB1_n                  ! bacteria/nitrogen(mmol N/m^3)
      integer :: iB1_p                  ! bacteria/phosphorus(mmol P/m^3)
      integer :: iP1_c                  ! diatoms/carbon(mg C/m^3)
      integer :: iP1_n                  ! diatoms/nitrogen(mmol N/m^3)
      integer :: iP1_p                  ! diatoms/phosphorus(mmol P/m^3)
      integer :: iP1_Chl                  ! diatoms/chlorophyll a(mg/m^3)
      integer :: iP1_s                  ! diatoms/silicate(mmol Si/m^3)
      integer :: iL2_c                  ! calcite/carbon(mg C/m^3)
      integer :: iP2_c                  ! nanophytoplankton/carbon(mg C/m^3)
      integer :: iP2_n                  ! nanophytoplankton/nitrogen(mmol N/m^3)
      integer :: iP2_p                  ! nanophytoplankton/phosphorus(mmol P/m^3)
      integer :: iP2_Chl                  ! nanophytoplankton/chlorophyll a(mg/m^3)
      integer :: iP3_c                  ! picophytoplankton/carbon(mg C/m^3)
      integer :: iP3_n                  ! picophytoplankton/nitrogen(mmol N/m^3)
      integer :: iP3_p                  ! picophytoplankton/phosphorus(mmol P/m^3)
      integer :: iP3_Chl                  ! picophytoplankton/chlorophyll a(mg/m^3)
      integer :: iP4_c                  ! microphytoplankton/carbon(mg C/m^3)
      integer :: iP4_n                  ! microphytoplankton/nitrogen(mmol N/m^3)
      integer :: iP4_p                  ! microphytoplankton/phosphorus(mmol P/m^3)
      integer :: iP4_Chl                  ! microphytoplankton/chlorophyll a(mg/m^3)
      integer :: iZ4_c                  ! mesozooplankton/carbon(mg C/m^3)
      integer :: iZ5_c                  ! microzooplankton/carbon(mg C/m^3)
      integer :: iZ5_n                  ! microzooplankton/nitrogen(mmol N/m^3)
      integer :: iZ5_p                  ! microzooplankton/phosphorus(mmol P/m^3)
      integer :: iZ6_c                  ! nanoflagellates/carbon(mg C/m^3)
      integer :: iZ6_n                  ! nanoflagellates/nitrogen(mmol N/m^3)
      integer :: iZ6_p                  ! nanoflagellates/phosphorus(mmol P/m^3)

      integer, allocatable :: icheckmax(:)
      real(r8), allocatable :: dBdt1max(:)


      CONTAINS
      SUBROUTINE initialize_biology
!
!
!  This routine sets several variables needed by the biology model.
!
!  It allocates and assigns biological tracer indices.
!
!
!
!  Local variable declarations
!
      integer :: i, ic
!
!  Determine number of biological tracers.
!
      NBT=51
!
      NBS=0
!
      NBB=11
!
!
!  Allocate various module variables.
!

      IF (.not.allocated(icheckmax)) THEN
        allocate ( icheckmax(Ngrids) )
      END IF
      IF (.not.allocated(dBdt1max)) THEN
        allocate ( dBdt1max(Ngrids) )
      END IF
!
!  Allocate biological tracer vector.
!
      IF (.not.allocated(idbio)) THEN
        allocate ( idbio(NBT) )
      END IF

      write(*,*) "Done all allocation in rfabm_mod.h"

!
!  Initialize tracer identification indices.
!
      ic=NAT+NPT+NCS+NNS
      DO i=1,NBT
        idbio(i)=ic+i
      END DO

!  Here we set the indices in the tracer array "t"
      iN1_p=ic+1
      iN3_n=ic+2
      iN4_n=ic+3
      iN5_s=ic+4
      iO2_o=ic+5
      iO3_c=ic+6
      iO3_TA=ic+7
      iR1_c=ic+8
      iR1_n=ic+9
      iR1_p=ic+10
      iR2_c=ic+11
      iR3_c=ic+12
      iR4_c=ic+13
      iR4_n=ic+14
      iR4_p=ic+15
      iR6_c=ic+16
      iR6_n=ic+17
      iR6_p=ic+18
      iR6_s=ic+19
      iR8_c=ic+20
      iR8_n=ic+21
      iR8_p=ic+22
      iR8_s=ic+23
      iB1_c=ic+24
      iB1_n=ic+25
      iB1_p=ic+26
      iP1_c=ic+27
      iP1_n=ic+28
      iP1_p=ic+29
      iP1_Chl=ic+30
      iP1_s=ic+31
      iL2_c=ic+32
      iP2_c=ic+33
      iP2_n=ic+34
      iP2_p=ic+35
      iP2_Chl=ic+36
      iP3_c=ic+37
      iP3_n=ic+38
      iP3_p=ic+39
      iP3_Chl=ic+40
      iP4_c=ic+41
      iP4_n=ic+42
      iP4_p=ic+43
      iP4_Chl=ic+44
      iZ4_c=ic+45
      iZ5_c=ic+46
      iZ5_n=ic+47
      iZ5_p=ic+48
      iZ6_c=ic+49
      iZ6_n=ic+50
      iZ6_p=ic+51

      RETURN
      END SUBROUTINE initialize_biology