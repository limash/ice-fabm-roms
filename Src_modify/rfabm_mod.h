
! ROMS input file generated by fabm_roms....py
!
! Phil Wallhead, NIVA (2015)
!
      USE mod_param
!
      implicit none


!
!  Set (pelagic) biological tracer identification indices.
!
      integer, allocatable :: idbio(:)  ! Biological tracers
      integer :: iB_OXYDEP_Oxy                  ! oxydep/Oxy: Oxygen (mmol/m**3)
      integer :: iB_OXYDEP_Phy                  ! oxydep/Phy: Autotrophs/Phytoplankton (mmol/m**3)
      integer :: iB_OXYDEP_NUT                  ! oxydep/NUT: Nutrient (mmol/m**3)
      integer :: iB_OXYDEP_POM                  ! oxydep/POM: Particulate organic matter (mmol/m**3)
      integer :: iB_OXYDEP_DOM                  ! oxydep/DOM: Dissolved organic matter (mmol/m**3)
      integer :: iB_OXYDEP_Het                  ! oxydep/Het: Heterotrophs/Zooplankton (mmol/m**3)
      integer :: iB_BIOPLAST_MP_free            ! bioplast/MP_free: Free Microplastic (mg/m^3)
      integer :: iB_BIOPLAST_MP_biof            ! bioplast/MP_biof: Microplastic with biofouling (mg/m^3)
      integer :: iB_BIOPLAST_MP_het             ! bioplast/MP_het: Microplastic, injested by HET (mg/m^3)
      integer :: iB_BIOPLAST_MP_det             ! bioplast/MP_det: Microplastic in detrit (mg/m^3)

#if defined DIAGNOSTICS && defined DIAGNOSTICS_BIO
!
!  Biological 2D diagnostic variable IDs.
!
      integer, allocatable :: iDbio2(:)

!
!  Biological 3D diagnostic variable IDs.
!
      integer, allocatable :: iDbio3(:)

      integer :: iB_OXYDEP_GrazPhy = 1
      integer :: iB_OXYDEP_GrazPOM = 2
      integer :: iB_OXYDEP_LimN = 3
      integer :: iB_OXYDEP_LimT = 4
      integer :: iB_OXYDEP_LimLight = 5
      integer :: iB_OXYDEP_GrowthPhy = 6
      integer :: iB_OXYDEP_DOM_decay_ox = 7
      integer :: iB_OXYDEP_DOM_decay_denitr = 8
      integer :: iB_OXYDEP_POM_decay_denitr = 9
      integer :: iB_OXYDEP_Autolys = 10
#endif!
!  Biological 2D diagnostic variable indices within FABM.
!
      integer, allocatable :: idfabmD2(:)

!
!  Biological 3D diagnostic variable indices within FABM.
!
      integer, allocatable :: idfabmD3(:)


      integer, allocatable :: icheckmax(:)
      real(r8), allocatable :: dBdt1max(:)


      CONTAINS
      SUBROUTINE initialize_biology
!
!
!  This routine sets several variables needed by the biology model.
!
!  It allocates and assigns biological tracer indices.
!
!
!
!  Local variable declarations
!
      integer :: i, ic
!
!  Determine number of biological tracers.
!
      NBT=10   !Number of pelagic biological tracers
      NSAT=0   !Number of surface-attached biological state variables (Ngrids vector assignment)
      NBAT=0   !Number of bottom-attached biological state variables (Ngrids vector assignment)
!Note: NBT, NSAT, and NBAT are all declared in mod_param
!      This is so that other subroutines to access these parameters via mod_param
!      However, we need to use (NSAT, NBAT) already below, hence these are initialized here


#if defined DIAGNOSTICS && defined DIAGNOSTICS_BIO
!
!-----------------------------------------------------------------------
! Set sources and sinks biology diagnostic parameters.
!-----------------------------------------------------------------------
!
! Set number of diagnostic terms.
!
      NDbio2d=0
      NDbio3d=10
#endif

!
!  Allocate various module variables.
!
      IF (.not.allocated(icheckmax)) THEN
        allocate ( icheckmax(Ngrids) )
      END IF
      IF (.not.allocated(dBdt1max)) THEN
        allocate ( dBdt1max(Ngrids) )
      END IF
!
!  Allocate pelagic biological tracer index vector.
!
!  Note: these are indices within the NetCDF index vector idTvar
!
      IF (.not.allocated(idbio)) THEN
        allocate ( idbio(NBT) )
      END IF

#if defined DIAGNOSTICS && defined DIAGNOSTICS_BIO
!
!  Allocate biological diagnostics NetCDF index vectors iDbio2 and iDbio3.
!  Note: these are analagous to idTvar, not subindex vectors like idbio above;
!        they are assigned directly in rfabm_var.h, using the individual subindices set above.
!
      IF (.not.allocated(iDbio2)) THEN
        allocate ( iDbio2(NDbio2d) )
      END IF

      IF (.not.allocated(iDbio3)) THEN
        allocate ( iDbio3(NDbio3d) )
      END IF
!
!  Allocate FABM index vectors idfabmD2 and idfabmD3.
!  These are the indices of the compiled diagnostic subsets in the complete FABM lists
!
      IF (.not.allocated(idfabmD2)) THEN
        allocate ( idfabmD2(NDbio2d) )
      END IF

      IF (.not.allocated(idfabmD3)) THEN
        allocate ( idfabmD3(NDbio3d) )
      END IF
#endif

#ifdef DEBUG
      write(*,*) "Done all allocation in Src_modify/rfabm_mod.h"
#endif
!
!  Initialize pelagic tracer identification indices.
!
      ic=NAT+NPT+NCS+NNS
      DO i=1,NBT
        idbio(i)=ic+i
      END DO

!  Here we set the indices in the tracer array "t"
      iB_OXYDEP_Oxy=ic+1
      iB_OXYDEP_Phy=ic+2
      iB_OXYDEP_NUT=ic+3
      iB_OXYDEP_POM=ic+4
      iB_OXYDEP_DOM=ic+5
      iB_OXYDEP_Het=ic+6
      iB_BIOPLAST_MP_free=ic+7
      iB_BIOPLAST_MP_biof=ic+8
      iB_BIOPLAST_MP_het=ic+9
      iB_BIOPLAST_MP_det=ic+10

#if defined DIAGNOSTICS && defined DIAGNOSTICS_BIO
!
! Set 2D diagnostic indices within the complete FABM list.
!
!
! Set 3D diagnostic indices within the complete FABM list.
!
      idfabmD3(1)=15
      idfabmD3(2)=16
      idfabmD3(3)=20
      idfabmD3(4)=22
      idfabmD3(5)=23
      idfabmD3(6)=21
      idfabmD3(7)=24
      idfabmD3(8)=25
      idfabmD3(9)=27
      idfabmD3(10)=28
#endif


      RETURN
      END SUBROUTINE initialize_biology